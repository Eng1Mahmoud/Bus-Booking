{"version":3,"file":"static/js/18.f7e431c4.chunk.js","mappings":"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","sources":["components/general/WaveShap.jsx","components/general/SubHero.jsx","components/settings/ChangeImage.jsx","components/settings/ChangePassword.jsx","components/settings/ChangeInfo.jsx","components/general/Loading.jsx","components/settings/TabsEdit.jsx","pages/SettingsPage.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Box } from \"@mui/material\";\r\nexport const WaveShap = () => {\r\n  return (\r\n \r\n      <Box\r\n          sx={{\r\n            position: \"absolute\",\r\n            bottom: \"-1px\",\r\n            left: \"0px\",\r\n            right: \"0px\",\r\n            backgroundColor: \"background.main\",\r\n            width: \"100%\",\r\n            clipPath: \"polygon(50% 62%, 100% 0, 100% 100%, 0 100%, 0 0)\",\r\n            height: \"70px\",\r\n            zIndex: 4,\r\n          }}\r\n      >\r\n      </Box>\r\n\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, Typography, Breadcrumbs } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Home } from \"@mui/icons-material\";\r\nimport KeyboardDoubleArrowRightIcon from \"@mui/icons-material/KeyboardDoubleArrowRight\";\r\nimport { WaveShap } from \"./WaveShap\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nexport const SubHero = ({ background, page }) => {\r\n  const { t } = useTranslation();\r\n  return (\r\n    <Box\r\n      sx={{\r\n        background: `url(${background}), linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5))`,\r\n        backgroundBlendMode: \"multiply\",\r\n        backgroundSize: \"cover\",\r\n        backgroundPosition: \"center\",\r\n        backgroundRepeat: \"no-repeat\",\r\n        height: \"80vh\",\r\n        width: \"100%\",\r\n        position: \"relative\",\r\n      \r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          flexDirection: \"column\",\r\n          textTransform: \"capitalize\",\r\n          color:\"text.therd\"\r\n        }}\r\n      >\r\n        <Typography variant=\"h2\" sx={{pb:2}}>  {t(`${page}`)}</Typography>\r\n        <Box>\r\n          <Breadcrumbs\r\n            separator={\r\n              <KeyboardDoubleArrowRightIcon\r\n                sx={{ color: \"text.therd\" }}\r\n                fontSize=\"medium\"\r\n              />\r\n            }\r\n            aria-label=\"breadcrumb\"\r\n          >\r\n            <Link\r\n              to=\"/\"\r\n              style={{\r\n                color: \"#fff\",\r\n                textDecoration: \"none\",\r\n                fontSize: \"20px\",\r\n                fontWeight: \"bold\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n              }}\r\n            >\r\n              <Home sx={{ mr: 0.5 }} fontSize=\"large\" />\r\n              <Typography variant=\"h6\" component=\"span\">\r\n                {t(\"Home\")}\r\n              </Typography>\r\n            </Link>\r\n\r\n            <Typography\r\n              sx={{ display: \"flex\", alignItems: \"center\", fontSize: \"20px\",  color:\"text.therd\" }}\r\n            >\r\n              {t(`${page}`)}\r\n            </Typography>\r\n          </Breadcrumbs>\r\n        </Box>\r\n      </Box>\r\n      <WaveShap />\r\n    </Box>\r\n  );\r\n};\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport fixedImage from \"../../assets/profile.png\";\r\nconst styleLabel = {\r\n  position: \"absolute\",\r\n  top: \"0px\",\r\n  left: \"0px\",\r\n  width: \"30px\",\r\n  height: \"30px\",\r\n  background: \"white\",\r\n  padding: \"2px\",\r\n  borderRadius: \"50%\",\r\n  border: \"1px solid #064180\",\r\n  cursor: \"pointer\",\r\n};\r\nexport const ChangeImage = ({ name, oldImage }) => {\r\n  const [image, setImage] = useState(\"\");\r\n  const handleImageChange = async (event) => {\r\n    const file = event.target.files[0];\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onloadend = async () => {\r\n      const result = reader.result;\r\n      if (result) {\r\n        await saveImage(result);\r\n      }\r\n    };\r\n  };\r\n  const saveImage = async (base64Image) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://booking-bus.onrender.com/uploadImage/\",\r\n        { image: base64Image },\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `Bearer ${Cookies.get(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      \r\n      setImage(res.data.result.image);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <Box>\r\n      <form>\r\n        <Box sx={{ py: 2 }}>\r\n          <input\r\n            type=\"file\"\r\n            id=\"image\"\r\n            name=\"image\"\r\n            label=\"image\"\r\n            style={{ visibility: \"hidden\", width: \"0px\", height: \"0px\" }}\r\n            onChange={handleImageChange}\r\n          />\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"start\",\r\n              alignItems: \"top\",\r\n            }}\r\n          >\r\n            <Box sx={{ position: \"relative\",border:\"1px solid text.main !important\" }}>\r\n              <img\r\n                src={image ? image : oldImage ? oldImage : fixedImage}\r\n                alt=\"profile\"\r\n                style={{\r\n                  width: \"100px\",\r\n                  height: \"100px\",\r\n                  borderRadius: \"50%\",\r\n                }}\r\n              />\r\n              <label htmlFor=\"image\" style={styleLabel}>\r\n                <EditIcon sx={{ color: \"main\" }} />\r\n              </label>\r\n            </Box>\r\n\r\n            <Box>\r\n              <Typography\r\n                variant=\"h4\"\r\n                sx={{\r\n                  pt: 3,\r\n                  px: 3,\r\n                  color: \"text.main\",\r\n                  textTransform: \"capitalize\",\r\n                }}\r\n              >\r\n                {name}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n","import {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Snackbar,\r\n  SnackbarContent,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nconst initialValues = {\r\n  password: \"\",\r\n  newPassword: \"\",\r\n};\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (values.password && !values.password) {\r\n    errors.password = \"Required\";\r\n  } else if (values.password && values.password.length < 6) {\r\n    errors.password = \"Password must be at least 6 characters\";\r\n  }\r\n  return errors;\r\n};\r\n\r\nexport const ChangePassword = () => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [result, setResult] = React.useState({});\r\n  const handleSubmit = async (values, { resetForm }) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://booking-bus.onrender.com/changePassword/\",\r\n        values,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `Bearer ${Cookies.get(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      resetForm();\r\n      setOpen(true);\r\n      setResult(res.data.result);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <Container maxWidth=\"md\">\r\n        <Snackbar\r\n          anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={() => setOpen(false)}\r\n        >\r\n          <SnackbarContent\r\n            sx={{ backgroundColor: result.match ? \"green\" : \"red\" }}\r\n            message={result.message}\r\n          />\r\n        </Snackbar>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validate={validate}\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ errors, touched, handleChange, handleBlur, isSubmitting }) => (\r\n            <Form>\r\n              <Box>\r\n                <Grid container spacing={2} sx={{ py: 5 }}>\r\n                  <Grid item xs={12}>\r\n                    <Field\r\n                      as={TextField}\r\n                      fullWidth\r\n                      id=\"password\"\r\n                      name=\"password\"\r\n                      type=\"password\"\r\n                      label=\"Current Password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={touched.password && errors.password ? true : false}\r\n                      helperText={\r\n                        touched.password && errors.password\r\n                          ? errors.password\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Field\r\n                      as={TextField}\r\n                      fullWidth\r\n                      id=\"newPassword\"\r\n                      name=\"newPassword\"\r\n                      type=\"password\"\r\n                      label=\"New Password\"\r\n                      onChange={handleChange}\r\n                      onBlur={handleBlur}\r\n                      error={\r\n                        touched.newPassword && errors.newPassword ? true : false\r\n                      }\r\n                      helperText={\r\n                        touched.newPassword && errors.newPassword\r\n                          ? errors.newPassword\r\n                          : \"\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Button variant=\"contained\" color=\"secondary\" type=\"submit\">\r\n                      Save\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n","import { Container, TextField, Button, Grid, Box } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport Cookies from \"js-cookie\";\r\nimport { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.FName) {\r\n    errors.FName = \"Required\";\r\n  }\r\n\r\n  if (!values.LName) {\r\n    errors.LName = \"Required\";\r\n  }\r\n\r\n  if (!values.email) {\r\n    errors.email = \"Required\";\r\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\r\n    errors.email = \"Invalid email address\";\r\n  }\r\n\r\n  return errors;\r\n};\r\nexport const ChangeInfo = ({ oldInformation }) => {\r\n  const [newInformation, setNewInformation] = useState(\"\");\r\n  const { t } = useTranslation();\r\n  const initialValues = {\r\n    FName: newInformation.FName ? newInformation.FName : oldInformation.FName,\r\n    LName: newInformation.LName ? newInformation.LName : oldInformation.LName,\r\n    email: newInformation.email ? newInformation.email : oldInformation.email,\r\n  };\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://booking-bus.onrender.com/updateInfo/\",\r\n        values,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `Bearer ${Cookies.get(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      setNewInformation(res.data.result);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container sx={{ paddingY: \"50px\" }}>\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          isSubmitting,\r\n        }) => (\r\n          <Form>\r\n            <Box>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    fullWidth\r\n                    id=\"FName\"\r\n                    name=\"FName\"\r\n                    value={values.FName}\r\n                    label={t(\"First Name\")}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.FName && errors.FName ? true : false}\r\n                    helperText={\r\n                      touched.FName && errors.FName ? errors.FName : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <Field\r\n                    as={TextField}\r\n                    fullWidth\r\n                    id=\"LName\"\r\n                    name=\"LName\"\r\n                    label={t(\"Last Name\")}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.LName && errors.LName ? true : false}\r\n                    helperText={\r\n                      touched.LName && errors.LName ? errors.LName : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Field\r\n                    as={TextField}\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    label={t(\"Email\")}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    error={touched.email && errors.email ? true : false}\r\n                    helperText={\r\n                      touched.email && errors.email ? errors.email : \"\"\r\n                    }\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting || Object.keys(errors).length > 0}\r\n                  >\r\n                    {t(\"Save\")}\r\n                  </Button>{\" \"}\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Container>\r\n  );\r\n};\r\n","import { Avatar, Box, Skeleton } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nexport const Loading = () => {\r\n  return (\r\n    <Box>\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"start\",\r\n          alignItems: \"top\",\r\n          mb: 3,\r\n        }}\r\n      >\r\n        <Skeleton variant=\"circular\" width={100} height={100} mt={3}>\r\n          <Avatar />\r\n        </Skeleton>\r\n        <Skeleton\r\n          variant=\"rectangular\"\r\n          width={300}\r\n          height={30}\r\n          sx={{ mt: 3, ml: 2 }}\r\n        />\r\n      </Box>\r\n      <Box sx={{ mt: 3, mb: 3 }}>\r\n        <Skeleton\r\n          variant=\"rectangular\"\r\n          sx={{ width: [\"300px\", \"400px\", \"600px\"] }}\r\n          height={50}\r\n        />\r\n      </Box>\r\n      <Box sx={{ mt: 3, mb: 3 }}>\r\n        <Skeleton\r\n          variant=\"rectangular\"\r\n          sx={{ width: [\"300px\", \"400px\", \"600px\"] }}\r\n          height={200}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { Chip, Container, Divider } from \"@mui/material\";\r\nimport { ChangeImage } from \"./ChangeImage\";\r\nimport { ChangePassword } from \"./ChangePassword\";\r\nimport { ChangeInfo } from \"./ChangeInfo\";\r\nimport axios from \"axios\";\r\nimport Cookies from \"js-cookie\";\r\nimport { Loading } from \"../general/Loading\";\r\nimport { useTranslation } from \"react-i18next\";\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n  return (\r\n    <Box\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Box>{children}</Box>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\nexport default function TabsEdit() {\r\n  const [loading, setLoading] = React.useState(true);\r\n  const [user, setUser] = React.useState({});\r\n  const { t } = useTranslation();\r\n  const fetchUser = async () => {\r\n    try {\r\n      const res = await axios.post(\r\n        \"https://booking-bus.onrender.com/getUser/\",\r\n        {},\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n            authorization: `Bearer ${Cookies.get(\"token\")}`,\r\n          },\r\n        }\r\n      );\r\n      setUser(res.data.result);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  React.useEffect(() => {\r\n    if (Cookies.get(\"token\")) {\r\n      fetchUser();\r\n    }\r\n  }, [user.image]);\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Divider\r\n        textAlign=\"center\"\r\n        sx={{ color: \"main\", py: 3, width: [\"300px\", \"500px\"], margin: \"auto\" }}\r\n      >\r\n        <Chip\r\n          label=\" Acount Settings\"\r\n          sx={{\r\n            backgroundColor: \"main\",\r\n            color: \"text.main\",\r\n            fontWeight: \"200\",\r\n            fontSize: \"1.2rem\",\r\n          }}\r\n        />\r\n      </Divider>\r\n      {loading ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <ChangeImage\r\n            name={`${user.FName} ${user.LName}`}\r\n            oldImage={user.image}\r\n          />\r\n          <Box sx={{ width: \"100%\" }}>\r\n            <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n              <Tabs\r\n                value={value}\r\n                onChange={handleChange}\r\n                aria-label=\"basic tabs example\"\r\n              >\r\n                <Tab label={t(\"Edit\")} {...a11yProps(0)} />\r\n                <Tab label={t(\"Edit Password\")} {...a11yProps(1)} />\r\n              </Tabs>\r\n            </Box>\r\n            <TabPanel value={value} index={0}>\r\n              <ChangeInfo oldInformation={user} />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n              <ChangePassword />\r\n            </TabPanel>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { SubHero } from \"../components/general/SubHero\";\r\nimport TabsEdit from \"../components/settings/TabsEdit\";\r\nimport settingsImage from \"../assets/settings.jpg\";\r\nconst SettingsPage = () => {\r\n  return (\r\n    <Box>\r\n      <SubHero page=\"Settings\" background={settingsImage} />\r\n      <TabsEdit />\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default SettingsPage;"],"names":["WaveShap","Box","sx","position","bottom","left","right","backgroundColor","width","clipPath","height","zIndex","SubHero","background","page","t","useTranslation","backgroundBlendMode","backgroundSize","backgroundPosition","backgroundRepeat","display","alignItems","justifyContent","flexDirection","textTransform","color","Typography","variant","pb","Breadcrumbs","separator","KeyboardDoubleArrowRight","fontSize","to","style","textDecoration","fontWeight","Home","mr","component","styleLabel","top","padding","borderRadius","border","cursor","ChangeImage","name","oldImage","image","setImage","useState","saveImage","async","res","axios","base64Image","headers","authorization","Cookies","data","result","err","console","log","py","type","id","label","visibility","onChange","file","event","target","files","reader","FileReader","readAsDataURL","onloadend","src","fixedImage","alt","htmlFor","Edit","pt","px","initialValues","password","newPassword","validate","values","errors","length","ChangePassword","open","setOpen","React","setResult","Container","maxWidth","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","SnackbarContent","match","message","onSubmit","resetForm","touched","handleChange","handleBlur","isSubmitting","Grid","container","spacing","item","xs","as","TextField","fullWidth","onBlur","error","helperText","Button","FName","LName","email","test","ChangeInfo","oldInformation","newInformation","setNewInformation","paddingY","setSubmitting","sm","value","disabled","Object","keys","Loading","mb","Skeleton","mt","Avatar","ml","TabPanel","props","children","index","other","role","hidden","p","a11yProps","TabsEdit","loading","setLoading","user","setUser","setValue","fetchUser","Divider","textAlign","margin","Chip","borderBottom","borderColor","Tabs","newValue","Tab","settingsImage"],"sourceRoot":""}